{
  "openapi": "3.0.0",
  "info": {
    "title": "Intercom REST API",
    "version": "2.2",
    "contact": {
      "url": "https://developers.intercom.com/building-apps",
      "name": "Intercom Developer Hub"
    },
    "description": "Retrieve information, keep your data in sync, or take actions programmatically through Intercom's API."
  },
  "servers": [
    {
      "url": "https://api.intercom.io"
    }
  ],
  "paths": {
    "/contacts": {
      "get": {
        "summary": "List all contacts",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactList"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "type": "list",
                      "data": [
                        {
                          "type": "contact",
                          "id": "5ba682d23d7cf92bef87bfd4",
                          "workspace_id": "ecahpwf5",
                          "external_id": "25",
                          "role": "user",
                          "email": "wash@serenity.io",
                          "phone": "+1123456789",
                          "name": "Hoban Washburn",
                          "avatar": "https://example.org/128Wash.jpg",
                          "owner_id": 127,
                          "social_profiles": {
                            "type": "list",
                            "data": [
                              {
                                "type": "social_profile",
                                "name": "Twitter",
                                "url": "http://twitter.com/th1sland"
                              }
                            ]
                          },
                          "unsubscribed_from_emails": false,
                          "created_at": 1571672154,
                          "updated_at": 1571672158,
                          "signed_up_at": 1571069751,
                          "last_seen_at": 1571069751,
                          "last_replied_at": 1571672158,
                          "last_contacted_at": 1571672158,
                          "last_email_opened_at": 1571673478,
                          "last_email_clicked_at": 1571676789,
                          "browser": "chrome",
                          "browser_version": "77.0.3865.90",
                          "browser_language": "en",
                          "os": "OS X 10.14.6",
                          "location": {
                            "type": "location",
                            "country": "Ireland",
                            "region": "Dublin",
                            "city": "Dublin"
                          },
                          "custom_attributes": {
                            "paid_subscriber": "true",
                            "monthly_spend": "155.5",
                            "team_mates": "1"
                          },
                          "tags": {
                            "type": "list",
                            "data": [
                              {
                                "type": "tag",
                                "id": "2",
                                "url": "/tags/2"
                              },
                              {
                                "type": "tag",
                                "id": "4",
                                "url": "/tags/4"
                              },
                              {
                                "type": "tag",
                                "id": "5",
                                "url": "/tags/5"
                              }
                            ],
                            "url": "/contacts/5ba682d23d7cf92bef87bfd4/tags"
                          },
                          "notes": {
                            "type": "list",
                            "data": [
                              {
                                "type": "note",
                                "id": "20114858",
                                "url": "/notes/20114858"
                              }
                            ],
                            "url": "/contacts/5ba682d23d7cf92bef87bfd4/notes"
                          },
                          "companies": {
                            "type": "list",
                            "data": [
                              {
                                "type": "company",
                                "id": "5ba686093d7cf93552a3dc99",
                                "url": "/companies/5ba686093d7cf93552a3dc99"
                              },
                              {
                                "type": "company",
                                "id": "5cee64a03d7cf90c51b36f19",
                                "url": "/companies/5cee64a03d7cf90c51b36f19"
                              },
                              {
                                "type": "company",
                                "id": "5d7668883d7cf944dbc5c791",
                                "url": "/companies/5d7668883d7cf944dbc5c791"
                              }
                            ],
                            "url": "/contacts/5ba682d23d7cf92bef87bfd4/companies"
                          }
                        }
                      ],
                      "total_count": 436,
                      "pages": {
                        "type": "pages",
                        "next": {
                          "page": 2,
                          "starting_after": "WzE1NzEzMTc0NDYwMDAsIjViYTY4MmQyM2Q3Y2Y5MmJlZjg3YmZkNCIsMl0="
                        },
                        "page": 1,
                        "per_page": 1,
                        "total_pages": 436
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "type": "error.list",
                      "request_id": "0033stouf61cc58lp9ig",
                      "errors": [
                        {
                          "code": "client_error",
                          "message": "Invalid starting_after param. Please try again using a starting_after value from a paginated response"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-contacts",
        "description": "Fetch a list of all contacts.",
        "parameters": [
          {
            "schema": {
              "type": "number",
              "default": 10,
              "maximum": 150,
              "minimum": 1,
              "example": 100
            },
            "in": "query",
            "name": "per_page",
            "description": "The number of items returned in a single response.\nDefault is 50.\nMax is 150."
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "in": "query",
            "name": "starting_after",
            "description": "The cursor used for pagination in order to fetch the next page of results."
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Contacts"
        ]
      }
    },
    "/contacts/search": {
      "post": {
        "summary": "Search for contacts",
        "operationId": "post-contacts-search",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactList"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "type": "list",
                      "data": [
                        {
                          "type": "contact",
                          "id": "5ba682d23d7cf92bef87bfd4",
                          "workspace_id": "ecahpwf5",
                          "external_id": "25",
                          "role": "user",
                          "email": "wash@serenity.io",
                          "phone": "+1123456789",
                          "name": "Hoban Washburn",
                          "avatar": "https://example.org/128Wash.jpg",
                          "owner_id": 127,
                          "social_profiles": {
                            "type": "list",
                            "data": [
                              {
                                "type": "social_profile",
                                "name": "Twitter",
                                "url": "http://twitter.com/th1sland"
                              }
                            ]
                          },
                          "unsubscribed_from_emails": false,
                          "created_at": 1571672154,
                          "updated_at": 1571672158,
                          "signed_up_at": 1571069751,
                          "last_seen_at": 1571069751,
                          "last_replied_at": 1571672158,
                          "last_contacted_at": 1571672158,
                          "last_email_opened_at": 1571673478,
                          "last_email_clicked_at": 1571676789,
                          "browser": "chrome",
                          "browser_version": "77.0.3865.90",
                          "browser_language": "en",
                          "os": "OS X 10.14.6",
                          "location": {
                            "type": "location",
                            "country": "Ireland",
                            "region": "Dublin",
                            "city": "Dublin"
                          },
                          "custom_attributes": {
                            "paid_subscriber": "true",
                            "monthly_spend": "155.5",
                            "team_mates": "1"
                          },
                          "tags": {
                            "type": "list",
                            "data": [
                              {
                                "type": "tag",
                                "id": "2",
                                "url": "/tags/2"
                              },
                              {
                                "type": "tag",
                                "id": "4",
                                "url": "/tags/4"
                              },
                              {
                                "type": "tag",
                                "id": "5",
                                "url": "/tags/5"
                              }
                            ],
                            "url": "/contacts/5ba682d23d7cf92bef87bfd4/tags"
                          },
                          "notes": {
                            "type": "list",
                            "data": [
                              {
                                "type": "note",
                                "id": "20114858",
                                "url": "/notes/20114858"
                              }
                            ],
                            "url": "/contacts/5ba682d23d7cf92bef87bfd4/notes"
                          },
                          "companies": {
                            "type": "list",
                            "data": [
                              {
                                "type": "company",
                                "id": "5ba686093d7cf93552a3dc99",
                                "url": "/companies/5ba686093d7cf93552a3dc99"
                              },
                              {
                                "type": "company",
                                "id": "5cee64a03d7cf90c51b36f19",
                                "url": "/companies/5cee64a03d7cf90c51b36f19"
                              },
                              {
                                "type": "company",
                                "id": "5d7668883d7cf944dbc5c791",
                                "url": "/companies/5d7668883d7cf944dbc5c791"
                              }
                            ],
                            "url": "/contacts/5ba682d23d7cf92bef87bfd4/companies"
                          }
                        }
                      ],
                      "total_count": 436,
                      "pages": {
                        "type": "pages",
                        "next": {
                          "page": 2,
                          "starting_after": "WzE1NzEzMTc0NDYwMDAsIjViYTY4MmQyM2Q3Y2Y5MmJlZjg3YmZkNCIsMl0="
                        },
                        "page": 1,
                        "per_page": 1,
                        "total_pages": 436
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                },
                "examples": {
                  "Invalid Parameters": {
                    "value": {
                      "type": "error.list",
                      "request_id": "693d48decbb24ad5bc1e2bf75dc9e8ca",
                      "errors": [
                        {
                          "code": "bad_request",
                          "message": "bad 'random_param' parameter"
                        }
                      ]
                    }
                  },
                  "Required Parameter Not There": {
                    "value": {
                      "type": "error.list",
                      "request_id": "693d48decbb24ad5bc1e2bf75dc9e8ca",
                      "errors": [
                        {
                          "code": "invalid_query",
                          "message": "Invalid query. Ensure 'field', 'operator', 'value' are present for field queries. Ensure 'operator' and 'value' for composite queries."
                        }
                      ]
                    }
                  },
                  "Too Many Nested Values (Max 10)": {
                    "value": {
                      "type": "error.list",
                      "request_id": "693d48decbb24ad5bc1e2bf75dc9e8ca",
                      "errors": [
                        {
                          "code": "invalid_values",
                          "message": "Value depth exceeds 10 items"
                        }
                      ]
                    }
                  },
                  "Invalid Value": {
                    "value": {
                      "type": "error.list",
                      "request_id": "693d48decbb24ad5bc1e2bf75dc9e8ca",
                      "errors": [
                        {
                          "code": "invalid_value",
                          "message": "123 is not a valid string"
                        }
                      ]
                    }
                  },
                  "Invalid Field": {
                    "value": {
                      "type": "error.list",
                      "request_id": "693d48decbb24ad5bc1e2bf75dc9e8ca",
                      "errors": [
                        {
                          "code": "invalid_field",
                          "message": "not_a_field is not a valid field"
                        }
                      ]
                    }
                  },
                  "Invalid Multiple Filter Operator": {
                    "value": {
                      "type": "error.list",
                      "request_id": "693d48decbb24ad5bc1e2bf75dc9e8ca",
                      "errors": [
                        {
                          "code": "invalid_operator",
                          "message": "Composite operators must be of type AND or OR "
                        }
                      ]
                    }
                  },
                  "Invalid Value Operator": {
                    "value": {
                      "type": "error.list",
                      "request_id": "693d48decbb24ad5bc1e2bf75dc9e8ca",
                      "errors": [
                        {
                          "code": "invalid_operator",
                          "message": "email does not support operator: >"
                        }
                      ]
                    }
                  },
                  "Too Many Values (Max 15)": {
                    "value": {
                      "type": "error.list",
                      "request_id": "693d48decbb24ad5bc1e2bf75dc9e8ca",
                      "errors": [
                        {
                          "code": "invalid_value",
                          "message": "Number of elements in composite query is greater than 15, please try again with a smaller list"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "description": "You can search for multiple contacts by the value of their attributes in order to fetch exactly who you want.\n\nTo search for contacts, you need to send a POST request to this endpoint. This will accept a query object in the body which will define your filters in order to search for contacts.",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/SingleFilterQuery"
                  },
                  {
                    "$ref": "#/components/schemas/MultiFilterQuery"
                  },
                  {
                    "$ref": "#/components/schemas/NestedFilterQuery"
                  }
                ]
              },
              "examples": {
                "Single Filter": {
                  "value": {
                    "query": {
                      "field": "custom_attributes.salesforce_status",
                      "operator": "~",
                      "value": "open"
                    }
                  }
                },
                "Multiple Filters": {
                  "value": {
                    "query": {
                      "operator": "AND",
                      "value": [
                        {
                          "field": "custom_attributes.social_network",
                          "operator": "=",
                          "value": "facebook"
                        },
                        {
                          "field": "custom_attributes.social_network",
                          "operator": "=",
                          "value": "twitter"
                        },
                        {
                          "field": "custom_attributes.social_network",
                          "operator": "=",
                          "value": "instagram"
                        }
                      ]
                    }
                  }
                },
                "Nested Filters": {
                  "value": {
                    "query": {
                      "operator": "AND",
                      "value": [
                        {
                          "operator": "OR",
                          "value": [
                            {
                              "field": "created_at",
                              "operator": ">",
                              "value": 1560436650
                            },
                            {
                              "field": "signed_up_at",
                              "operator": ">",
                              "value": 1560436784
                            }
                          ]
                        },
                        {
                          "operator": "OR",
                          "value": [
                            {
                              "field": "custom_attributes.salseforce_status",
                              "operator": "~",
                              "value": "Open"
                            },
                            {
                              "field": "custom_attributes.salesforce_object_type",
                              "operator": "=",
                              "value": "Lead"
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Contacts"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Next": {
        "description": "Provides information about the next page in a result set.",
        "type": "object",
        "x-examples": {
          "Example": {
            "page": 4,
            "starting_after": "1HaSB+xrOyyMXAkS/c1RteCL7BzOzTvYjmjakgTergIH31eoe2v4/sbLsJWP\nIncfQLD3ouPkZlCwJ86F\n"
          }
        },
        "title": "Next",
        "properties": {
          "page": {
            "type": "number",
            "description": "Number of next page in the result set."
          },
          "starting_after": {
            "type": [
              "string",
              "null"
            ],
            "description": "Cursor value to be provided in the next call to the pagination query, to return the next set of results.",
            "minLength": 1
          }
        },
        "required": [
          "page"
        ]
      },
      "Pages": {
        "description": "Provides information needed to paginate through records in a result set.",
        "type": "object",
        "x-examples": {
          "Example": {
            "type": "pages",
            "next": {
              "page": 4,
              "starting_after": "1HaSB+xrOyyMXAkS/c1RteCL7BzOzTvYjmjakgTergIH31eoe2v4/sbLsJWP\nIncfQLD3ouPkZlCwJ86F\n"
            },
            "page": 3,
            "per_page": 5,
            "total_pages": 10
          }
        },
        "title": "Pages",
        "properties": {
          "type": {
            "type": "string",
            "minLength": 1,
            "description": "The type of object - pages."
          },
          "next": {
            "$ref": "#/components/schemas/Next"
          },
          "page": {
            "type": "number",
            "description": "Current page."
          },
          "per_page": {
            "type": "number",
            "description": "How many records per page are included in the response."
          },
          "total_pages": {
            "type": "number",
            "description": "Total pages in the result set."
          }
        },
        "required": [
          "type"
        ]
      },
      "SocialProfile": {
        "description": "Represents a social profile of a contact.",
        "type": "object",
        "x-examples": {
          "Example": {
            "type": "social_profile",
            "name": "Twitter",
            "url": "http://twitter.com/th1sland"
          }
        },
        "title": "Social Profile",
        "properties": {
          "type": {
            "type": "string",
            "minLength": 1,
            "description": "The type of object - social_profile."
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "description": "\t\nThe name of the service (ie. Twitter, Facebook, etc)."
          },
          "url": {
            "type": "string",
            "minLength": 1,
            "description": "\t\nThe profile page for the contact on the service."
          }
        },
        "required": [
          "type",
          "name",
          "url"
        ]
      },
      "SocialProfileList": {
        "description": "A list of social profiles associated to a contact.",
        "type": "object",
        "x-examples": {
          "Example": {
            "type": "list",
            "data": [
              {
                "type": "social_profile",
                "name": "Twitter",
                "url": "http://twitter.com/th1sland"
              }
            ]
          }
        },
        "properties": {
          "type": {
            "type": "string",
            "minLength": 1,
            "description": "The type of object - list."
          },
          "data": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "description": "List of social profiles.",
            "items": {
              "$ref": "#/components/schemas/SocialProfile"
            }
          }
        },
        "required": [
          "type",
          "data"
        ],
        "title": "Social Profiles List"
      },
      "Location": {
        "description": "The location of a contact.",
        "type": "object",
        "x-examples": {
          "Example": {
            "type": "location",
            "country": "Ireland",
            "region": "Dublin",
            "city": "Dublin"
          }
        },
        "title": "Location",
        "properties": {
          "type": {
            "type": "string",
            "minLength": 1,
            "description": "The type of object - location."
          },
          "country": {
            "type": [
              "string",
              "null"
            ],
            "minLength": 1,
            "description": "The country where the contact is."
          },
          "region": {
            "type": [
              "string",
              "null"
            ],
            "minLength": 1,
            "description": "A subdivision of the country which the contact is in (ie. state, province, county, territory, etc)."
          },
          "city": {
            "type": [
              "string",
              "null"
            ],
            "minLength": 1,
            "description": "The city where the contact is."
          }
        },
        "required": [
          "type"
        ]
      },
      "AddressableObject": {
        "description": "An object that can be addressed in the Intercom API.",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "minLength": 1,
            "description": "The type of object - company, note, tag."
          },
          "id": {
            "type": "string",
            "minLength": 1,
            "description": "The id of the object."
          },
          "url": {
            "type": "string",
            "minLength": 1,
            "description": "The URL where the object in question can be accessed (ie. /companies/45678)."
          }
        },
        "required": [
          "type",
          "id",
          "url"
        ],
        "x-examples": {
          "Example": {
            "type": "company",
            "id": "5ba686093d7cf93552a3dc99",
            "url": "/companies/5ba686093d7cf93552a3dc99"
          }
        },
        "title": "Addressable Object"
      },
      "AddressableList": {
        "description": "A list of addressable objects.",
        "type": "object",
        "x-examples": {
          "Example": {
            "type": "list",
            "data": [
              {
                "type": "company",
                "id": "5ba686093d7cf93552a3dc99",
                "url": "/companies/5ba686093d7cf93552a3dc99"
              },
              {
                "type": "company",
                "id": "5cee64a03d7cf90c51b36f19",
                "url": "/companies/5cee64a03d7cf90c51b36f19"
              },
              {
                "type": "company",
                "id": "5d7668883d7cf944dbc5c791",
                "url": "/companies/5d7668883d7cf944dbc5c791"
              }
            ],
            "url": "/contacts/5ba682d23d7cf92bef87bfd4/companies",
            "total_count": 3,
            "has_more": false
          }
        },
        "title": "Addressable List",
        "properties": {
          "type": {
            "type": "string",
            "minLength": 1,
            "description": "The type of object - list."
          },
          "data": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "description": "An array of Addressable Objects.\nMaximum of 10.",
            "items": {
              "$ref": "#/components/schemas/AddressableObject"
            }
          },
          "url": {
            "type": [
              "string",
              "null"
            ],
            "description": "The URL where the full list can be accessed (ie. /contacts/1234/companies)."
          },
          "total_count": {
            "type": "number",
            "description": "The total amount of records."
          },
          "has_more": {
            "type": "boolean",
            "description": "Whether there's more Addressable Objects to be viewed. If true, use the url to view all."
          }
        },
        "required": [
          "type",
          "data"
        ]
      },
      "Contact": {
        "description": "The Contacts Model provides details on these contacts within Intercom, and will specify whether they are a user or lead through the role attribute.",
        "type": "object",
        "x-examples": {
          "Example": {
            "type": "contact",
            "id": "5ba682d23d7cf92bef87bfd4",
            "workspace_id": "ecahpwf5",
            "external_id": "25",
            "role": "user",
            "email": "wash@serenity.io",
            "phone": "+1123456789",
            "name": "Hoban Washburn",
            "avatar": "https://example.org/128Wash.jpg",
            "owner_id": 127,
            "social_profiles": {
              "type": "list",
              "data": [
                {
                  "type": "social_profile",
                  "name": "Twitter",
                  "url": "http://twitter.com/th1sland"
                }
              ]
            },
            "has_hard_bounced": false,
            "marked_email_as_spam": false,
            "unsubscribed_from_emails": false,
            "created_at": 1571672154,
            "updated_at": 1571672158,
            "signed_up_at": 1571069751,
            "last_seen_at": 1571069751,
            "last_replied_at": 1571672158,
            "last_contacted_at": 1571672158,
            "last_email_opened_at": 1571673478,
            "last_email_clicked_at": 1571676789,
            "language_override": null,
            "browser": "chrome",
            "browser_version": "77.0.3865.90",
            "browser_language": "en",
            "os": "OS X 10.14.6",
            "location": {
              "type": "location",
              "country": "Ireland",
              "region": "Dublin",
              "city": "Dublin"
            },
            "android_app_name": null,
            "android_app_version": null,
            "android_device": null,
            "android_os_version": null,
            "android_sdk_version": null,
            "android_last_seen_at": null,
            "ios_app_name": null,
            "ios_app_version": null,
            "ios_device": null,
            "ios_os_version": null,
            "ios_sdk_version": null,
            "ios_last_seen_at": null,
            "custom_attributes": {
              "paid_subscriber": true,
              "monthly_spend": 155.5,
              "team_mates": 1
            },
            "tags": {
              "type": "list",
              "data": [
                {
                  "type": "tag",
                  "id": "2",
                  "url": "/tags/2"
                },
                {
                  "type": "tag",
                  "id": "4",
                  "url": "/tags/4"
                },
                {
                  "type": "tag",
                  "id": "5",
                  "url": "/tags/5"
                }
              ],
              "url": "/contacts/5ba682d23d7cf92bef87bfd4/tags",
              "total_count": 3,
              "has_more": false
            },
            "notes": {
              "type": "list",
              "data": [
                {
                  "type": "note",
                  "id": "20114858",
                  "url": "/notes/20114858"
                }
              ],
              "url": "/contacts/5ba682d23d7cf92bef87bfd4/notes",
              "total_count": 1,
              "has_more": false
            },
            "companies": {
              "type": "list",
              "data": [
                {
                  "type": "company",
                  "id": "5ba686093d7cf93552a3dc99",
                  "url": "/companies/5ba686093d7cf93552a3dc99"
                },
                {
                  "type": "company",
                  "id": "5cee64a03d7cf90c51b36f19",
                  "url": "/companies/5cee64a03d7cf90c51b36f19"
                },
                {
                  "type": "company",
                  "id": "5d7668883d7cf944dbc5c791",
                  "url": "/companies/5d7668883d7cf944dbc5c791"
                }
              ],
              "url": "/contacts/5ba682d23d7cf92bef87bfd4/companies",
              "total_count": 3,
              "has_more": false
            }
          }
        },
        "title": "Contact",
        "properties": {
          "type": {
            "type": "string",
            "minLength": 1,
            "description": "The type of object - contact."
          },
          "id": {
            "type": "string",
            "minLength": 1,
            "description": "\t\nThe unique identifier for the contact which is given by Intercom."
          },
          "workspace_id": {
            "type": "string",
            "minLength": 1,
            "description": "The id of the workspace which the contact belongs to."
          },
          "external_id": {
            "type": [
              "string",
              "null"
            ],
            "minLength": 1,
            "description": "\t\nA unique identifier for the contact which is given to Intercom."
          },
          "role": {
            "type": "string",
            "minLength": 1,
            "description": "The role of the contact - user or lead."
          },
          "email": {
            "type": [
              "string",
              "null"
            ],
            "minLength": 1,
            "description": "The contacts email."
          },
          "phone": {
            "type": [
              "string",
              "null"
            ],
            "description": "\t\nThe contacts phone."
          },
          "name": {
            "type": [
              "string",
              "null"
            ],
            "minLength": 1,
            "description": "The contacts name."
          },
          "avatar": {
            "type": [
              "string",
              "null"
            ],
            "minLength": 1,
            "description": "An image URL containing the avatar of a contact."
          },
          "owner_id": {
            "type": [
              "number",
              "null"
            ],
            "description": "The id of an admin that has been assigned account ownership of the contact."
          },
          "social_profiles": {
            "$ref": "#/components/schemas/SocialProfileList"
          },
          "has_hard_bounced": {
            "type": [
              "boolean",
              "null"
            ],
            "description": "Whether the contact has had an email sent to them hard bounce."
          },
          "marked_email_as_spam": {
            "type": [
              "boolean",
              "null"
            ],
            "description": "Whether the contact has marked an email sent to them as spam."
          },
          "unsubscribed_from_emails": {
            "type": [
              "boolean",
              "null"
            ],
            "description": "Whether the contact is unsubscribed from emails."
          },
          "created_at": {
            "type": "number",
            "description": "The time when the contact was created. UNIX timestamp."
          },
          "updated_at": {
            "type": [
              "number",
              "null"
            ],
            "description": "The time when the contact was last updated. UNIX timestamp."
          },
          "signed_up_at": {
            "type": [
              "number",
              "null"
            ],
            "description": "The time specified for when a contact signed up. UNIX timestamp."
          },
          "last_seen_at": {
            "type": [
              "number",
              "null"
            ],
            "description": "The time when the contact was last seen (either where the Intercom Messenger was installed or when specified manually). UNIX timestamp."
          },
          "last_replied_at": {
            "type": [
              "number",
              "null"
            ],
            "description": "The time when the contact last messaged in. UNIX timestamp."
          },
          "last_contacted_at": {
            "type": [
              "number",
              "null"
            ],
            "description": "The time when the contact was last messaged. UNIX timestamp."
          },
          "last_email_opened_at": {
            "type": [
              "number",
              "null"
            ],
            "description": "The time when the contact last opened an email. UNIX timestamp."
          },
          "last_email_clicked_at": {
            "type": [
              "number",
              "null"
            ],
            "description": "The time when the contact last clicked a link in an email. UNIX timestamp."
          },
          "language_override": {
            "type": [
              "string",
              "null"
            ],
            "description": "A preferred language setting for the contact, used by the Intercom Messenger even if their browser settings change.",
            "minLength": 1
          },
          "browser": {
            "type": [
              "string",
              "null"
            ],
            "minLength": 1,
            "description": "The name of the browser which the contact is using."
          },
          "browser_version": {
            "type": [
              "string",
              "null"
            ],
            "minLength": 1,
            "description": "The version of the browser which the contact is using."
          },
          "browser_language": {
            "type": [
              "string",
              "null"
            ],
            "minLength": 1,
            "description": "The language set by the browser which the contact is using."
          },
          "os": {
            "type": [
              "string",
              "null"
            ],
            "minLength": 1,
            "description": "The operating system which the contact is using."
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "android_app_name": {
            "type": [
              "string",
              "null"
            ],
            "description": "\t\nThe name of the Android app which the contact is using.",
            "minLength": 1
          },
          "android_app_version": {
            "type": [
              "string",
              "null"
            ],
            "description": "The version of the Android app which the contact is using.",
            "minLength": 1
          },
          "android_device": {
            "type": [
              "string",
              "null"
            ],
            "description": "The Android device which the contact is using.",
            "minLength": 1
          },
          "android_os_version": {
            "type": [
              "string",
              "null"
            ],
            "description": "The version of the Android OS which the contact is using.",
            "minLength": 1
          },
          "android_sdk_version": {
            "type": [
              "string",
              "null"
            ],
            "description": "The version of the Android SDK which the contact is using.",
            "minLength": 1
          },
          "android_last_seen_at": {
            "type": [
              "number",
              "null"
            ],
            "description": "The last time the contact used the Android app. UNIX timestamp."
          },
          "ios_app_name": {
            "type": [
              "string",
              "null"
            ],
            "description": "The name of the iOS app which the contact is using.",
            "minLength": 1
          },
          "ios_app_version": {
            "type": [
              "string",
              "null"
            ],
            "minLength": 1,
            "description": "The version of the iOS app which the contact is using."
          },
          "ios_device": {
            "type": [
              "string",
              "null"
            ],
            "minLength": 1,
            "description": "The iOS device which the contact is using."
          },
          "ios_os_version": {
            "type": [
              "string",
              "null"
            ],
            "minLength": 1,
            "description": "The version of iOS which the contact is using."
          },
          "ios_sdk_version": {
            "type": [
              "string",
              "null"
            ],
            "minLength": 1,
            "description": "The version of the iOS SDK which the contact is using."
          },
          "ios_last_seen_at": {
            "type": [
              "number",
              "null"
            ],
            "description": "The last time the contact used the iOS app. UNIX timestamp."
          },
          "custom_attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The custom attributes which are set for the contact."
          },
          "tags": {
            "$ref": "#/components/schemas/AddressableList"
          },
          "notes": {
            "$ref": "#/components/schemas/AddressableList"
          },
          "companies": {
            "$ref": "#/components/schemas/AddressableList"
          }
        },
        "required": [
          "type",
          "id",
          "workspace_id",
          "role"
        ]
      },
      "ContactList": {
        "description": "A paginated list of Contact objects.",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "minLength": 1,
            "description": "The type of object - list."
          },
          "data": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "description": "An array containing Contact Objects.",
            "items": {
              "$ref": "#/components/schemas/Contact"
            }
          },
          "total_count": {
            "type": "number",
            "description": "The total number of contacts."
          },
          "pages": {
            "$ref": "#/components/schemas/Pages"
          }
        },
        "required": [
          "type",
          "data"
        ],
        "title": "Contact List"
      },
      "SingleFilterQuery": {
        "description": "Query filter with a single condition.",
        "type": "object",
        "x-examples": {
          "Example": {
            "query": {
              "field": "custom_attributes.salesforce_status",
              "operator": "~",
              "value": "open"
            }
          }
        },
        "title": "Single Filter Query",
        "properties": {
          "query": {
            "$ref": "#/components/schemas/SingleFilter"
          }
        },
        "required": [
          "query"
        ]
      },
      "SingleFilter": {
        "description": "A single filter used to define your queries to \nsearch for items.",
        "type": "object",
        "x-examples": {
          "String value": {
            "field": "custom_attributes.salesforce_status",
            "operator": "~",
            "value": "open"
          },
          "Unix date value": {
            "field": "created_at",
            "operator": ">",
            "value": 1560436650
          }
        },
        "title": "Single Filter",
        "properties": {
          "field": {
            "type": "string",
            "minLength": 1,
            "description": "The fields associated to a customer that you can search for."
          },
          "operator": {
            "type": "string",
            "description": "\t\nThe operator that you want to compare by.",
            "enum": [
              "=",
              "!=",
              "IN",
              "NIN",
              ">=",
              ">",
              "<=",
              "<",
              "~",
              "!~",
              "^",
              "$"
            ],
            "minLength": 1
          },
          "value": {
            "description": "The value you want to search by.",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "integer"
              }
            ]
          }
        },
        "required": [
          "field",
          "operator",
          "value"
        ]
      },
      "MultiFilterQuery": {
        "description": "Query filter with multiple conditions.",
        "type": "object",
        "x-examples": {
          "Example": {
            "query": {
              "operator": "AND",
              "value": [
                {
                  "field": "custom_attributes.social_network",
                  "operator": "=",
                  "value": "facebook"
                },
                {
                  "field": "custom_attributes.social_network",
                  "operator": "=",
                  "value": "twitter"
                },
                {
                  "field": "custom_attributes.social_network",
                  "operator": "=",
                  "value": "instagram"
                }
              ]
            }
          }
        },
        "title": "Multi-Filter Query",
        "properties": {
          "query": {
            "$ref": "#/components/schemas/MultiFilter"
          }
        },
        "required": [
          "query"
        ]
      },
      "NestedFilterQuery": {
        "description": "Query filter that includes multiple nested filters.",
        "type": "object",
        "title": "Nested Filter Query",
        "properties": {
          "query": {
            "$ref": "#/components/schemas/NestedFilter"
          }
        },
        "required": [
          "query"
        ]
      },
      "MultiFilter": {
        "description": "Class that allows you to combine multiple filters in a single query.",
        "type": "object",
        "properties": {
          "operator": {
            "type": "string",
            "minLength": 1,
            "enum": [
              "AND",
              "OR"
            ]
          },
          "value": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/SingleFilter"
            }
          }
        },
        "required": [
          "operator",
          "value"
        ],
        "title": "Multi-Filter",
        "x-examples": {
          "Example": {
            "operator": "AND",
            "value": [
              {
                "field": "custom_attributes.social_network",
                "operator": "=",
                "value": "facebook"
              },
              {
                "field": "custom_attributes.social_network",
                "operator": "=",
                "value": "twitter"
              },
              {
                "field": "custom_attributes.social_network",
                "operator": "=",
                "value": "instagram"
              }
            ]
          }
        }
      },
      "NestedFilter": {
        "description": "Class that allows you to nest and combine multiple filters in a single query.",
        "type": "object",
        "properties": {
          "operator": {
            "type": "string",
            "minLength": 1
          },
          "value": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/MultiFilter"
            }
          }
        },
        "required": [
          "operator",
          "value"
        ],
        "title": "Nested Filter",
        "x-examples": {
          "Example": {
            "operator": "AND",
            "value": [
              {
                "operator": "OR",
                "value": [
                  {
                    "field": "created_at",
                    "operator": ">",
                    "value": 1560436650
                  },
                  {
                    "field": "signed_up_at",
                    "operator": ">",
                    "value": 1560436784
                  }
                ]
              },
              {
                "operator": "OR",
                "value": [
                  {
                    "field": "custom_attributes.salseforce_status",
                    "operator": "~",
                    "value": "Open"
                  },
                  {
                    "field": "custom_attributes.salesforce_object_type",
                    "operator": "=",
                    "value": "Lead"
                  }
                ]
              }
            ]
          }
        }
      },
      "Error": {
        "description": "Error that ocurred when calling the Intercom API.",
        "type": "object",
        "x-examples": {
          "Example": {
            "code": "conflict",
            "message": "A contact matching those details already exists with id=5da6f18e3d7cf967e4582d05"
          }
        },
        "properties": {
          "code": {
            "type": "string",
            "minLength": 1,
            "description": "Error code"
          },
          "message": {
            "type": "string",
            "minLength": 1,
            "description": "Error message"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "title": "Error"
      },
      "Errors": {
        "description": "A list of errors that ocurred when calling the Intercom API.",
        "type": "object",
        "title": "Errors",
        "properties": {
          "type": {
            "type": "string",
            "minLength": 1,
            "description": "The type of object - error.list."
          },
          "request_id": {
            "type": "string",
            "minLength": 1,
            "description": "Id of the request."
          },
          "errors": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "required": [
          "type",
          "request_id",
          "errors"
        ],
        "x-examples": {
          "Example": {
            "type": "error.list",
            "request_id": "80ec9d92-99ff-4da9-9a0e-c0ab7c42f7e7",
            "errors": [
              {
                "code": "conflict",
                "message": "A contact matching those details already exists with id=5da6f18e3d7cf967e4582d05"
              }
            ]
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "tags": [
    {
      "name": "Contacts"
    }
  ]
}